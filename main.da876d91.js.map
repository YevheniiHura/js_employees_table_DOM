{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","table","tableHead","tableBody","headings","querySelectorAll","tableRows","heading","setAttribute","addEventListener","e","map","target","headingIndex","cellIndex","rowsArray","rows","sort","firstElement","secondElement","firstContent","cells","textContent","secondContent","parseInt","isNaN","slice","localeCompare","replaceAll","getAttribute","append","reverse","selectedRow","closest","row","classList","remove","contains","add","insertAdjacentHTML","form","AddToTable","preventDefault","currentForm","formFields","elements","newEmployeeName","name","value","newEmployeePosition","position","newEmployeeOffice","office","newEmployeeAge","age","newEmployeeSalary","salary","EmployeeSalary","toLocaleString","trim","length","parseFloat","pushNotification","title","description","type","message","createElement","className","setTimeout","item","itemText","itemIndex","innerHTML","newInput","select","focus","figure","pushEvent","key","blur"],"mappings":"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","file":"main.da876d91.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst table = document.querySelector('table');\nconst tableHead = table.querySelector('thead');\nconst tableBody = table.querySelector('tbody');\n\nconst headings = tableHead.querySelectorAll('th');\nconst tableRows = tableBody.querySelectorAll('tr');\n\nfor (const heading of headings) {\n  heading.setAttribute('data-order', 'desc');\n}\n\ntableHead.addEventListener('click', (e) => {\n  [...headings].map((heading) => {\n    if (heading !== e.target) {\n      heading.setAttribute('data-order', 'desc');\n    }\n  });\n\n  const headingIndex = e.target.cellIndex;\n\n  const rowsArray = [...tableBody.rows];\n\n  rowsArray.sort((firstElement, secondElement) => {\n    const firstContent = firstElement.cells[headingIndex].textContent;\n    const secondContent = secondElement.cells[headingIndex].textContent;\n\n    if (parseInt(firstContent) === +firstContent) {\n      return firstContent - secondContent;\n    };\n\n    if (isNaN(parseInt(firstContent.slice(1)))) {\n      return firstContent.localeCompare(secondContent);\n    } else {\n      return parseInt(firstContent.slice(1).replaceAll(',', ''))\n      - parseInt(secondContent.slice(1).replaceAll(',', ''));\n    }\n  });\n\n  if (e.target.getAttribute('data-order') === 'desc') {\n    tableBody.append(...rowsArray);\n    e.target.setAttribute('data-order', 'asc');\n  } else {\n    tableBody.append(...rowsArray.reverse());\n    e.target.setAttribute('data-order', 'desc');\n  }\n});\n\ntableBody.addEventListener('click', (e) => {\n  const selectedRow = e.target.closest('tr');\n\n  [...tableRows].map((row) => {\n    if (row !== selectedRow) {\n      row.classList.remove('active');\n    }\n  });\n\n  if (selectedRow.classList.contains('active')) {\n    selectedRow.classList.remove('active');\n  } else {\n    selectedRow.classList.add('active');\n  }\n});\n\nbody.insertAdjacentHTML('beforeend', `\n<form\n  method=\"GET\"\n  action=\"/\"\n  class=\"new-employee-form\"\n>\n  <label>\n    Name:\n    <input \n      name=\"name\"\n      type=\"text\"\n      data-qa=\"name\"\n    >\n  </label>\n\n  <label>\n    Position:\n    <input \n      name=\"position\"\n      type=\"text\"\n      data-qa=\"position\"\n    >\n  </label>\n\n  <label>\n    Office:\n    <select data-qa=\"office\" name=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n\n  <label>\n    Age:\n    <input \n      name=\"age\"\n      type=\"number\"\n      data-qa=\"age\"\n      min=\"0\"\n    >\n  </label>\n\n  <label>\n    Salary:\n    <input \n      name=\"salary\"\n      type=\"number\"\n      data-qa=\"salary\"\n      min=\"0\"\n    >\n  </label>\n\n  <button type=\"submit\">\n    Save to table\n  </button>\n</form>\n`);\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', AddToTable);\n\nfunction AddToTable(e) {\n  e.preventDefault();\n\n  const currentForm = e.target;\n  const formFields = currentForm.elements;\n\n  const newEmployeeName = formFields.name.value;\n  const newEmployeePosition = formFields.position.value;\n  const newEmployeeOffice = formFields.office.value;\n  const newEmployeeAge = formFields.age.value;\n  const newEmployeeSalary = +formFields.salary.value;\n  const EmployeeSalary = `$${newEmployeeSalary.toLocaleString('en-US')}`;\n\n  if (newEmployeeName.trim() === '' || newEmployeeName.length < 4\n    || !isNaN(parseFloat(newEmployeeName))) {\n    pushNotification('Warning',\n      'The entered name must be at least 4 characters long', 'warning');\n  } else if (newEmployeeAge < 18) {\n    pushNotification('Warning',\n      'The employee must be at least 18 years old', 'warning');\n  } else if (newEmployeeAge > 90) {\n    pushNotification('Warning',\n      'The employee must be no more than 90 years old', 'warning');\n  } else if (newEmployeePosition.trim() === '' || newEmployeePosition.length < 2\n    || !isNaN(parseFloat(newEmployeePosition))) {\n    pushNotification('Warning',\n      'The entered position must be at least 2 characters long', 'warning');\n  } else {\n    tableBody.insertAdjacentHTML('beforeend', `\n      <tr>\n          <td>${newEmployeeName}</td>\n          <td>${newEmployeePosition}</td>\n          <td>${newEmployeeOffice}</td>\n          <td>${newEmployeeAge}</td>\n         <td>${EmployeeSalary}</td>\n        </tr>\n    `);\n\n    pushNotification('Success',\n      'The new employee\\'s data was added to the table', 'success');\n  }\n};\n\nconst pushNotification = function(title, description, type) {\n  const message = document.createElement('div');\n\n  message.setAttribute('data-qa', 'notification');\n  message.classList = 'notification';\n  message.classList += ` ${type}`;\n\n  message.insertAdjacentHTML('beforeend', `\n    <h2>${title}</h2>\n    <p>${description}</p>\n  `);\n\n  const heading = message.querySelector('h2');\n\n  heading.className = 'title';\n\n  body.append(message);\n\n  setTimeout(() => message.remove(), 2000);\n};\n\ntableBody.addEventListener('dblclick', (e) => {\n  const item = e.target.closest('td');\n  const itemText = item.textContent;\n  const itemIndex = item.cellIndex;\n\n  item.innerHTML = '';\n\n  let newInput = document.createElement('input');\n\n  newInput.className = 'cell-input';\n\n  if (itemIndex === 3 || itemIndex === 4) {\n    newInput.setAttribute('type', 'number');\n  }\n\n  if (itemIndex === 2) {\n    const select = document.createElement('select');\n\n    select.insertAdjacentHTML('afterbegin', `\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    `);\n\n    newInput = select;\n  }\n\n  if (itemIndex === 1 || itemIndex === 0) {\n    newInput.setAttribute('type', 'text');\n  }\n\n  item.append(newInput);\n  newInput.focus();\n\n  newInput.addEventListener('blur', () => {\n    if (itemIndex === 3 && newInput.value < 18) {\n      pushNotification('Warning',\n        'The employee must be at least 18 years old', 'warning');\n      item.textContent = itemText;\n\n      return;\n    };\n\n    if (itemIndex === 3 && newInput.value > 90) {\n      pushNotification('Warning',\n        'The employee must be no more than 90 years old', 'warning');\n      item.textContent = itemText;\n\n      return;\n    };\n\n    if (itemIndex === 4 && newInput.value < 0) {\n      pushNotification('Warning',\n        'The employee\\'s salary cannot be negative', 'warning');\n      item.textContent = itemText;\n\n      return;\n    };\n\n    if (itemIndex === 4 && newInput.value) {\n      const figure = +newInput.value;\n\n      item.textContent = '$' + `${figure.toLocaleString('en-US')}`;\n\n      return;\n    };\n\n    if (itemIndex === 0 && (newInput.value.trim() === ''\n      || newInput.value.length < 4\n      || !isNaN(parseFloat(newInput.value)))) {\n      pushNotification('Warning',\n        'The entered name must be at least 4 characters long', 'warning');\n      item.textContent = itemText;\n\n      return;\n    }\n\n    if (itemIndex === 1 && (newInput.value.trim() === ''\n      || newInput.value.length < 2\n      || !isNaN(parseFloat(newInput.value)))) {\n      pushNotification('Warning',\n        'The entered position must be at least 2 characters long', 'warning');\n      item.textContent = itemText;\n\n      return;\n    }\n\n    if (!newInput.value) {\n      item.textContent = itemText;\n    } else {\n      item.textContent = newInput.value;\n    };\n\n    newInput.remove();\n  });\n\n  newInput.addEventListener('keypress', (pushEvent) => {\n    if (pushEvent.key !== 'Enter') {\n      return;\n    }\n\n    newInput.blur();\n  });\n});\n"]}